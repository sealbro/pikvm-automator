// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: pikvm_automator.proto

package gen

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommandListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommandListRequest) Reset() {
	*x = CommandListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikvm_automator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandListRequest) ProtoMessage() {}

func (x *CommandListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pikvm_automator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandListRequest.ProtoReflect.Descriptor instead.
func (*CommandListRequest) Descriptor() ([]byte, []int) {
	return file_pikvm_automator_proto_rawDescGZIP(), []int{0}
}

type CommandListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commands []*Command `protobuf:"bytes,1,rep,name=commands,proto3" json:"commands,omitempty"`
}

func (x *CommandListResponse) Reset() {
	*x = CommandListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikvm_automator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandListResponse) ProtoMessage() {}

func (x *CommandListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pikvm_automator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandListResponse.ProtoReflect.Descriptor instead.
func (*CommandListResponse) Descriptor() ([]byte, []int) {
	return file_pikvm_automator_proto_rawDescGZIP(), []int{1}
}

func (x *CommandListResponse) GetCommands() []*Command {
	if x != nil {
		return x.Commands
	}
	return nil
}

type CallCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Expression string `protobuf:"bytes,1,opt,name=expression,proto3" json:"expression,omitempty"`
}

func (x *CallCommandRequest) Reset() {
	*x = CallCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikvm_automator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallCommandRequest) ProtoMessage() {}

func (x *CallCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pikvm_automator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallCommandRequest.ProtoReflect.Descriptor instead.
func (*CallCommandRequest) Descriptor() ([]byte, []int) {
	return file_pikvm_automator_proto_rawDescGZIP(), []int{2}
}

func (x *CallCommandRequest) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

type CallCommandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CallCommandResponse) Reset() {
	*x = CallCommandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikvm_automator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallCommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallCommandResponse) ProtoMessage() {}

func (x *CallCommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pikvm_automator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallCommandResponse.ProtoReflect.Descriptor instead.
func (*CallCommandResponse) Descriptor() ([]byte, []int) {
	return file_pikvm_automator_proto_rawDescGZIP(), []int{3}
}

type DeleteCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCommandRequest) Reset() {
	*x = DeleteCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikvm_automator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommandRequest) ProtoMessage() {}

func (x *DeleteCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pikvm_automator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommandRequest.ProtoReflect.Descriptor instead.
func (*DeleteCommandRequest) Descriptor() ([]byte, []int) {
	return file_pikvm_automator_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteCommandRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteCommandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCommandResponse) Reset() {
	*x = DeleteCommandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikvm_automator_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommandResponse) ProtoMessage() {}

func (x *DeleteCommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pikvm_automator_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommandResponse.ProtoReflect.Descriptor instead.
func (*DeleteCommandResponse) Descriptor() ([]byte, []int) {
	return file_pikvm_automator_proto_rawDescGZIP(), []int{5}
}

type CreateCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Expression  string `protobuf:"bytes,3,opt,name=expression,proto3" json:"expression,omitempty"`
}

func (x *CreateCommandRequest) Reset() {
	*x = CreateCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikvm_automator_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommandRequest) ProtoMessage() {}

func (x *CreateCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pikvm_automator_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommandRequest.ProtoReflect.Descriptor instead.
func (*CreateCommandRequest) Descriptor() ([]byte, []int) {
	return file_pikvm_automator_proto_rawDescGZIP(), []int{6}
}

func (x *CreateCommandRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateCommandRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateCommandRequest) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

type CreateCommandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateCommandResponse) Reset() {
	*x = CreateCommandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikvm_automator_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommandResponse) ProtoMessage() {}

func (x *CreateCommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pikvm_automator_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommandResponse.ProtoReflect.Descriptor instead.
func (*CreateCommandResponse) Descriptor() ([]byte, []int) {
	return file_pikvm_automator_proto_rawDescGZIP(), []int{7}
}

type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Expression  string `protobuf:"bytes,3,opt,name=expression,proto3" json:"expression,omitempty"`
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pikvm_automator_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_pikvm_automator_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_pikvm_automator_proto_rawDescGZIP(), []int{8}
}

func (x *Command) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Command) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Command) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

var File_pikvm_automator_proto protoreflect.FileDescriptor

var file_pikvm_automator_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x69, 0x6b, 0x76, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x70, 0x69, 0x6b, 0x76, 0x6d, 0x5f, 0x61,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x14, 0x0a,
	0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x4b, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70,
	0x69, 0x6b, 0x76, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73,
	0x22, 0x34, 0x0a, 0x12, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x0a,
	0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x68,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x17, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x5b, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e,
	0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0x88,
	0x04, 0x0a, 0x0e, 0x50, 0x69, 0x4b, 0x76, 0x6d, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x6f, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x23, 0x2e, 0x70, 0x69, 0x6b, 0x76, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x69, 0x6b, 0x76, 0x6d, 0x5f, 0x61, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x73, 0x12, 0x77, 0x0a, 0x0b, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x12, 0x23, 0x2e, 0x70, 0x69, 0x6b, 0x76, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x69, 0x6b, 0x76, 0x6d, 0x5f, 0x61,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x79, 0x0a, 0x0d, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x25, 0x2e, 0x70,
	0x69, 0x6b, 0x76, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x69, 0x6b, 0x76, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x6f,
	0x6d, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x13, 0x2a, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x77, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x25, 0x2e, 0x70, 0x69, 0x6b, 0x76, 0x6d, 0x5f,
	0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x70, 0x69, 0x6b, 0x76, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x3a, 0x01,
	0x2a, 0x1a, 0x0c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a,
	0x18, 0xca, 0x41, 0x15, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x68, 0x6f, 0x73, 0x74, 0x3a, 0x38, 0x30, 0x33, 0x32, 0x42, 0xa4, 0x01, 0x0a, 0x13, 0x63, 0x6f,
	0x6d, 0x2e, 0x70, 0x69, 0x6b, 0x76, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x6f,
	0x72, 0x42, 0x13, 0x50, 0x69, 0x6b, 0x76, 0x6d, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x6f,
	0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x20, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x62, 0x75,
	0x66, 0x2d, 0x74, 0x6f, 0x75, 0x72, 0x2f, 0x67, 0x65, 0x6e, 0xa2, 0x02, 0x03, 0x50, 0x58, 0x58,
	0xaa, 0x02, 0x0e, 0x50, 0x69, 0x6b, 0x76, 0x6d, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x6f,
	0x72, 0xca, 0x02, 0x0e, 0x50, 0x69, 0x6b, 0x76, 0x6d, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74,
	0x6f, 0x72, 0xe2, 0x02, 0x1a, 0x50, 0x69, 0x6b, 0x76, 0x6d, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61,
	0x74, 0x6f, 0x72, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x0e, 0x50, 0x69, 0x6b, 0x76, 0x6d, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x6f, 0x72,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pikvm_automator_proto_rawDescOnce sync.Once
	file_pikvm_automator_proto_rawDescData = file_pikvm_automator_proto_rawDesc
)

func file_pikvm_automator_proto_rawDescGZIP() []byte {
	file_pikvm_automator_proto_rawDescOnce.Do(func() {
		file_pikvm_automator_proto_rawDescData = protoimpl.X.CompressGZIP(file_pikvm_automator_proto_rawDescData)
	})
	return file_pikvm_automator_proto_rawDescData
}

var file_pikvm_automator_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_pikvm_automator_proto_goTypes = []any{
	(*CommandListRequest)(nil),    // 0: pikvm_automator.CommandListRequest
	(*CommandListResponse)(nil),   // 1: pikvm_automator.CommandListResponse
	(*CallCommandRequest)(nil),    // 2: pikvm_automator.CallCommandRequest
	(*CallCommandResponse)(nil),   // 3: pikvm_automator.CallCommandResponse
	(*DeleteCommandRequest)(nil),  // 4: pikvm_automator.DeleteCommandRequest
	(*DeleteCommandResponse)(nil), // 5: pikvm_automator.DeleteCommandResponse
	(*CreateCommandRequest)(nil),  // 6: pikvm_automator.CreateCommandRequest
	(*CreateCommandResponse)(nil), // 7: pikvm_automator.CreateCommandResponse
	(*Command)(nil),               // 8: pikvm_automator.Command
}
var file_pikvm_automator_proto_depIdxs = []int32{
	8, // 0: pikvm_automator.CommandListResponse.commands:type_name -> pikvm_automator.Command
	0, // 1: pikvm_automator.PiKvmAutomator.CommandList:input_type -> pikvm_automator.CommandListRequest
	2, // 2: pikvm_automator.PiKvmAutomator.CallCommand:input_type -> pikvm_automator.CallCommandRequest
	4, // 3: pikvm_automator.PiKvmAutomator.DeleteCommand:input_type -> pikvm_automator.DeleteCommandRequest
	6, // 4: pikvm_automator.PiKvmAutomator.CreateCommand:input_type -> pikvm_automator.CreateCommandRequest
	1, // 5: pikvm_automator.PiKvmAutomator.CommandList:output_type -> pikvm_automator.CommandListResponse
	3, // 6: pikvm_automator.PiKvmAutomator.CallCommand:output_type -> pikvm_automator.CallCommandResponse
	5, // 7: pikvm_automator.PiKvmAutomator.DeleteCommand:output_type -> pikvm_automator.DeleteCommandResponse
	7, // 8: pikvm_automator.PiKvmAutomator.CreateCommand:output_type -> pikvm_automator.CreateCommandResponse
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pikvm_automator_proto_init() }
func file_pikvm_automator_proto_init() {
	if File_pikvm_automator_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pikvm_automator_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CommandListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikvm_automator_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CommandListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikvm_automator_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CallCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikvm_automator_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CallCommandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikvm_automator_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikvm_automator_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteCommandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikvm_automator_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CreateCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikvm_automator_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CreateCommandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pikvm_automator_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pikvm_automator_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pikvm_automator_proto_goTypes,
		DependencyIndexes: file_pikvm_automator_proto_depIdxs,
		MessageInfos:      file_pikvm_automator_proto_msgTypes,
	}.Build()
	File_pikvm_automator_proto = out.File
	file_pikvm_automator_proto_rawDesc = nil
	file_pikvm_automator_proto_goTypes = nil
	file_pikvm_automator_proto_depIdxs = nil
}
